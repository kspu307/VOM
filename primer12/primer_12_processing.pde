float mx;//хранит текущую координату Х центра круга
float my;// хранит текущую координату Y центра круга 
float easing = 0.05;// задает значение коэффициента сглаживания для движения круга, который следует за курсором мыши
int radius = 24;// задает радиус круга
int edge = 100;// задает значение отступа от края экрана для прямоугольника в котором движется круг
int inner = edge + radius;// задает значение радиуса круга, при котором он не может выйти за пределы прямоугольника

void setup() {
  size(640, 360);
  noStroke(); 
  ellipseMode(RADIUS); 
  rectMode(CORNERS); 
}
void draw() { 
  background(51); //очистка экрана цветом 51 (темно-серый)
  if (abs(mouseX - mx) > 0.1) {
    mx = mx + (mouseX - mx) * easing;
  } // если расстояние между текущей координатой мыши по оси X и переменной "mx" больше, чем 0.1, то переменная "mx" изменяется с использованием формулы сглаживания движения круга.
  if (abs(mouseY - my) > 0.1) {
    my = my + (mouseY- my) * easing;
  }//то же самое для mouseY и my
//координаты "mx" и "my" ограничиваются, чтобы круг не выходил за пределы прямоугольника.
  mx = constrain(mx, inner, width - inner);
  my = constrain(my, inner, height - inner);
//рисуется прямоугольник с отступами от краев экрана = edge и закрашивается цветом 76
  fill(76);
  rect(edge, edge, width-edge, height-edge);
//рисуется белый круг с центром в "mx" и "my", радиусом "radius" 
  fill(255);  
  ellipse(mx, my, radius, radius);
}
