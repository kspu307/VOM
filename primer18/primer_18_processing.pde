import processing.serial.*;// импортируем библиотеку для работы с последовательным портом
Serial serial; // объявляем переменную serial для работы с последовательным портом
String val;// объявляем переменную для хранения строки, которую будем считывать с порта
int c;  //переменная для хранения номера цвета
void setup()
{
 size(300,300);
  String port = Serial.list()[Serial.list().length-1];
  //метод list содержит список доступных портов
  // первый элемент в списке [0], последний - [Serial.list().length-1]. J, обычно плата ардуино определяется на последнем порту в списке доступных портов
  //сохраняем доступный порт в переменной port
  serial = new Serial(this, port, 9600);
  // инициализируем объект Serial для работы с выбранным портом и задаем скорость передачи данных
  //можно напрямую указать номер порта, например,  serial = new Serial(this, "COM3", 9600);, но тогда он не будет определяться автоматически

}

void draw()
{
if ( serial.available() > 0) { // если есть данные,
    val = serial.readStringUntil('\n'); // считываем строку до символа переноса строки
//при считывании могут быть считаны некорректные данные (лишние символы)    
// Try-catch блок используется для обработки исключений (ошибок), которые могут возникнуть во время выполнения программы. Он позволяет отловить и обработать ошибку, чтобы программа не прекращала свою работу и не выдавала пользователю критичные сообщения об ошибках. В блоке try мы помещаем код, который может вызвать ошибку, а в блоке catch мы определяем, как обрабатывать эту ошибку. Если в блоке try возникает ошибка, то выполнение программы переходит в блок catch, где мы можем обработать ошибку или вывести сообщение пользователю.
    try {
      c = Integer.parseInt(val.trim()); 
    } //преобразуем строку в число .parseInt() и сохраняем в переменную c
    //метод .trim() удаляет все служебные символы (пробелы, табуляции, переносы строк) в начале и конце строки. Возвращает новую строку без этих символов.
    catch(Exception e) {
      println(e);
  }// если произошла ошибка при преобразовании, выводим сообщение об ошибке
// Exception e в блоке catch используется для получения информации об ошибке, которая произошла в блоке try. Он представляет объект исключения, который содержит информацию о типе ошибки и ее сообщении. Мы можем использовать этот объект для вывода сообщения об ошибке или для выполнения других действий, связанных с обработкой ошибок.
  }

 background(0,c,0);
}
